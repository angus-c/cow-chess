{"version":3,"sources":["../src/server/server.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAKA,IAAI,MAAM,wBAAV;;AAEA,QAAQ,oBAAR,EAA8B,OAA9B;;;AAGA,IAAI,IAAJ,GAAW,oBAAX;;;AAGA,IAAI,OAAO,IAAX;;AAEA,IAAI,MAAJ,GAAa;AACX,cAAY,CADD;AAEX,eAAa,CAFF;AAGX,oBAAkB;AAHP,CAAb;;AAMA,IAAI,GAAJ,CAAQ,kBAAQ,MAAR,CAAe,GAAf,CAAR;AACA,IAAI,GAAJ,CAAQ,kBAAQ,MAAR,CAAe,aAAf,CAAR;AACA,IAAI,GAAJ,CAAQ,qBAAW,IAAX,EAAR;;AAEA,IAAI,GAAJ,CAAQ,OAAR,EAAiB,UAAC,GAAD,EAAM,GAAN,EAAc;AAC7B,MAAI,IAAJ,CAAS,SAAT;AACD,CAFD;;AAIA,IAAI,IAAJ,CAAS,SAAT,EAAoB,UAAC,GAAD,EAAM,GAAN,EAAc;;AAEhC,MAAI,MAAJ,gBAAiB,IAAI,IAArB;AACA,MAAI,UAAJ,CAAe,GAAf;AACD,CAJD;;AAMA,IAAI,IAAJ,CAAS,QAAT,EAAmB,UAAC,GAAD,EAAM,GAAN,EAAc;;AAE/B,MAAI,IAAJ,CAAS,IAAI,IAAJ,CAAS,QAAT,EAAT;AACD,CAHD;;AAKA,IAAI,IAAJ,CAAS,WAAT,EAAsB,UAAC,GAAD,EAAM,GAAN,EAAc;;AAElC,MAAI,IAAJ,CAAS,IAAI,IAAJ,CAAS,cAAT,CAAwB,IAAI,IAAJ,CAAS,IAAjC,CAAT;AACA,MAAI,UAAJ,CAAe,GAAf;AACD,CAJD;;AAMA,IAAI,GAAJ,CAAQ,eAAR,EAAyB,UAAC,GAAD,EAAM,GAAN,EAAc;;AAErC,MAAI,IAAJ,CAAS,KAAK,SAAL,CAAe,yBAAf,CAAT;AACD,CAHD;;AAKA,IAAI,MAAJ,CAAW,IAAX;AACA,QAAQ,GAAR,CAAY,oBAAZ,EAAkC,IAAlC;;AAEA,OAAO,OAAP,GAAiB,GAAjB","file":"server.js","sourcesContent":["import express from 'express';\nimport bodyParser from 'body-parser';\nimport nextMove from './brain/nextMove';\nimport Game from './Game';\n\nlet app = express();\n\nrequire('source-map-support').install();\n\n/* eslint-disable new-cap */\napp.game = new Game();\n/* eslint-enable new-cap */\n\nvar port = 3000;\n\napp.config = {\n  probeDepth: 4,\n  cutOffDepth: 3,\n  cutOffProportion: 0.5\n};\n\napp.use(express.static('.'));\napp.use(express.static('dist-client'));\napp.use(bodyParser.json());\n\napp.get('/test', (req, res) => {\n  res.send('test ok');\n});\n\napp.post('/config', (req, res) => {\n  // TODO: fix assignment, error handling\n  app.config = {...req.body};\n  res.sendStatus(200);\n});\n\napp.post('/board', (req, res) => {\n  // TODO: error handling\n  res.send(app.game.getBoard());\n});\n\napp.post('/sendMove', (req, res) => {\n  // TODO: error handling\n  res.send(app.game.updatePosition(req.body.move));\n  res.sendStatus(200);\n});\n\napp.get('/generateMove', (req, res) => {\n  // TODO: error handling\n  res.send(JSON.stringify(nextMove()));\n});\n\napp.listen(port);\nconsole.log('chess listening on', port);\n\nmodule.exports = app;\n"]}